apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'maven-publish'
android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures{
        dataBinding = true
        // for view binding :
        // viewBinding = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

/**Create github.properties in root project folder file with gpr.usr=GITHUB_USER_ID  & gpr.key=PERSONAL_ACCESS_TOKEN**/
def githubProperties = new Properties()
githubProperties.load(new FileInputStream(rootProject.file("github.properties")))


def getVersionName = { ->
    return "1.0.0" // Replace with version Name
}

def getArtificatId = { ->
    return "mvvm_core" // Replace with library name ID
}

publishing {
    publications {
        bar(MavenPublication) {
            groupId 'com.datnt.libraries'
            artifactId getArtificatId()
            version getVersionName()
            artifact("$buildDir/outputs/aar/${getArtificatId()}-release.aar")
        }
    }

    repositories {
        maven {
            name = "mvvm_core"
            /** Configure path of your package repository on Github
             *  Replace GITHUB_USERID with your/organisation Github userID and REPOSITORY with the repository name on GitHub
             */
            url = uri("https://maven.pkg.github.com/datnt/mvvm_core")

            credentials {
                /**Create github.properties in root project folder file with gpr.usr=GITHUB_USER_ID  & gpr.key=PERSONAL_ACCESS_TOKEN**/
                username = githubProperties['gpr.usr'] ?: System.getenv("GPR_USER")
                password = githubProperties['gpr.key'] ?: System.getenv("GPR_API_KEY")
            }
        }
    }
}


dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    implementation deps.kotlin.stdlib
    implementation deps.work.runtime_ktx
    implementation deps.app_compat

    implementation deps.dagger.runtime
    implementation deps.dagger.android_support

    kapt deps.dagger.compiler
    kapt deps.dagger.android_support_compiler

    implementation deps.retrofit.runtime
    implementation deps.retrofit.gson
    implementation deps.retrofit.adapter
    implementation deps.okhttp_logging_interceptor

    implementation deps.core_ktx

    implementation deps.coroutines.core
    implementation deps.coroutines.android

    implementation deps.core_ktx

    implementation deps.lifecycle.runtime
    implementation deps.lifecycle.java8
    implementation deps.lifecycle.compiler
    implementation deps.lifecycle.viewmodel_ktx
    implementation deps.lifecycle.livedata_ktx

    implementation deps.fragment.runtime_ktx

    implementation deps.glide.runtime
    kapt deps.glide.compiler

    implementation deps.ted_permission

    testImplementation deps.junit
    androidTestImplementation deps.atsl.ext_junit
    androidTestImplementation deps.espresso.core

}